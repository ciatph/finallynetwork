{"id":"../../node_modules/steem/lib/auth/memo.js","dependencies":[{"name":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/package.json","includedInParent":true,"mtime":1536067589205},{"name":"/Users/sam/Documents/Projects/steem/finallynetwork/package.json","includedInParent":true,"mtime":1536781094103},{"name":"/Users/sam/Documents/Projects/steem/finallynetwork/.babelrc","includedInParent":true,"mtime":1535982004941},{"name":"bytebuffer","loc":{"line":12,"column":26},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/memo.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/bytebuffer/dist/bytebuffer.js"},{"name":"assert","loc":{"line":16,"column":22},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/memo.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/assert/assert.js"},{"name":"bs58","loc":{"line":20,"column":18},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/memo.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/bs58/index.js"},{"name":"./ecc","loc":{"line":24,"column":19},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/memo.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/index.js"},{"name":"./serializer","loc":{"line":26,"column":26},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/memo.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/serializer/index.js"},{"name":"buffer","parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/memo.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.decode = decode;\nexports.encode = encode;\n\nvar _bytebuffer = require('bytebuffer');\n\nvar _bytebuffer2 = _interopRequireDefault(_bytebuffer);\n\nvar _assert = require('assert');\n\nvar _assert2 = _interopRequireDefault(_assert);\n\nvar _bs = require('bs58');\n\nvar _bs2 = _interopRequireDefault(_bs);\n\nvar _ecc = require('./ecc');\n\nvar _serializer = require('./serializer');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar encMemo = _serializer.ops.encrypted_memo;\n\n/**\n    Some fields are only required if the memo is marked for decryption (starts with a hash).\n    @arg {string|PrivateKey} private_key - WIF or PrivateKey object\n    @arg {string} memo - plain text is returned, hash prefix base58 is decrypted\n    @return {string} - utf8 decoded string (hash prefix)\n*/\nfunction decode(private_key, memo) {\n    (0, _assert2.default)(memo, 'memo is required');\n    _assert2.default.equal(typeof memo === 'undefined' ? 'undefined' : _typeof(memo), 'string', 'memo');\n    if (!/^#/.test(memo)) return memo;\n    memo = memo.substring(1);\n\n    (0, _assert2.default)(private_key, 'private_key is required');\n    checkEncryption();\n\n    private_key = toPrivateObj(private_key);\n\n    memo = _bs2.default.decode(memo);\n    memo = encMemo.fromBuffer(new Buffer(memo, 'binary'));\n\n    var _memo = memo,\n        from = _memo.from,\n        to = _memo.to,\n        nonce = _memo.nonce,\n        check = _memo.check,\n        encrypted = _memo.encrypted;\n\n    var pubkey = private_key.toPublicKey().toString();\n    var otherpub = pubkey === from.toString() ? to.toString() : from.toString();\n    memo = _ecc.Aes.decrypt(private_key, otherpub, nonce, encrypted, check);\n\n    // remove varint length prefix\n    var mbuf = _bytebuffer2.default.fromBinary(memo.toString('binary'), _bytebuffer2.default.DEFAULT_CAPACITY, _bytebuffer2.default.LITTLE_ENDIAN);\n    try {\n        mbuf.mark();\n        return '#' + mbuf.readVString();\n    } catch (e) {\n        mbuf.reset();\n        // Sender did not length-prefix the memo\n        memo = new Buffer(mbuf.toString('binary'), 'binary').toString('utf-8');\n        return '#' + memo;\n    }\n}\n\n/**\n    Some fields are only required if the memo is marked for encryption (starts with a hash).\n    @arg {string|PrivateKey} private_key - WIF or PrivateKey object\n    @arg {string|PublicKey} public_key - Recipient\n    @arg {string} memo - plain text is returned, hash prefix text is encrypted\n    @arg {string} [testNonce = undefined] - just for testing\n    @return {string} - base64 decoded string (or plain text)\n*/\nfunction encode(private_key, public_key, memo, testNonce) {\n    (0, _assert2.default)(memo, 'memo is required');\n    _assert2.default.equal(typeof memo === 'undefined' ? 'undefined' : _typeof(memo), 'string', 'memo');\n    if (!/^#/.test(memo)) return memo;\n    memo = memo.substring(1);\n\n    (0, _assert2.default)(private_key, 'private_key is required');\n    (0, _assert2.default)(public_key, 'public_key is required');\n    checkEncryption();\n\n    private_key = toPrivateObj(private_key);\n    public_key = toPublicObj(public_key);\n\n    var mbuf = new _bytebuffer2.default(_bytebuffer2.default.DEFAULT_CAPACITY, _bytebuffer2.default.LITTLE_ENDIAN);\n    mbuf.writeVString(memo);\n    memo = new Buffer(mbuf.copy(0, mbuf.offset).toBinary(), 'binary');\n\n    var _Aes$encrypt = _ecc.Aes.encrypt(private_key, public_key, memo, testNonce),\n        nonce = _Aes$encrypt.nonce,\n        message = _Aes$encrypt.message,\n        checksum = _Aes$encrypt.checksum;\n\n    memo = encMemo.fromObject({\n        from: private_key.toPublicKey(),\n        to: public_key,\n        nonce: nonce,\n        check: checksum,\n        encrypted: message\n    });\n    // serialize\n    memo = encMemo.toBuffer(memo);\n    return '#' + _bs2.default.encode(new Buffer(memo, 'binary'));\n}\n\nvar encodeTest = undefined;\n\n/**\n  Memo encryption has failed in the browser before.  An Error will be thrown\n  if a memo can't be encrypted and decrypted.\n*/\nfunction checkEncryption() {\n    if (encodeTest === undefined) {\n        var plaintext = void 0;\n        encodeTest = true; // prevent infinate looping\n        try {\n            var wif = '5JdeC9P7Pbd1uGdFVEsJ41EkEnADbbHGq6p1BwFxm6txNBsQnsw';\n            var pubkey = 'STM8m5UgaFAAYQRuaNejYdS8FVLVp9Ss3K1qAVk5de6F8s3HnVbvA';\n            var cyphertext = encode(wif, pubkey, '#memo爱');\n            plaintext = decode(wif, cyphertext);\n        } catch (e) {\n            console.error(e);\n        } finally {\n            encodeTest = plaintext === '#memo爱';\n        }\n    }\n    if (encodeTest === false) throw new Error('This environment does not support encryption.');\n}\n\nvar toPrivateObj = function toPrivateObj(o) {\n    return o ? o.d ? o : _ecc.PrivateKey.fromWif(o) : o /*null or undefined*/;\n};\nvar toPublicObj = function toPublicObj(o) {\n    return o ? o.Q ? o : _ecc.PublicKey.fromString(o) : o /*null or undefined*/;\n};","map":{"mappings":[{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/steem/lib/auth/memo.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}}],"sources":{"../../node_modules/steem/lib/auth/memo.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.decode = decode;\nexports.encode = encode;\n\nvar _bytebuffer = require('bytebuffer');\n\nvar _bytebuffer2 = _interopRequireDefault(_bytebuffer);\n\nvar _assert = require('assert');\n\nvar _assert2 = _interopRequireDefault(_assert);\n\nvar _bs = require('bs58');\n\nvar _bs2 = _interopRequireDefault(_bs);\n\nvar _ecc = require('./ecc');\n\nvar _serializer = require('./serializer');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar encMemo = _serializer.ops.encrypted_memo;\n\n/**\n    Some fields are only required if the memo is marked for decryption (starts with a hash).\n    @arg {string|PrivateKey} private_key - WIF or PrivateKey object\n    @arg {string} memo - plain text is returned, hash prefix base58 is decrypted\n    @return {string} - utf8 decoded string (hash prefix)\n*/\nfunction decode(private_key, memo) {\n    (0, _assert2.default)(memo, 'memo is required');\n    _assert2.default.equal(typeof memo === 'undefined' ? 'undefined' : _typeof(memo), 'string', 'memo');\n    if (!/^#/.test(memo)) return memo;\n    memo = memo.substring(1);\n\n    (0, _assert2.default)(private_key, 'private_key is required');\n    checkEncryption();\n\n    private_key = toPrivateObj(private_key);\n\n    memo = _bs2.default.decode(memo);\n    memo = encMemo.fromBuffer(new Buffer(memo, 'binary'));\n\n    var _memo = memo,\n        from = _memo.from,\n        to = _memo.to,\n        nonce = _memo.nonce,\n        check = _memo.check,\n        encrypted = _memo.encrypted;\n\n    var pubkey = private_key.toPublicKey().toString();\n    var otherpub = pubkey === from.toString() ? to.toString() : from.toString();\n    memo = _ecc.Aes.decrypt(private_key, otherpub, nonce, encrypted, check);\n\n    // remove varint length prefix\n    var mbuf = _bytebuffer2.default.fromBinary(memo.toString('binary'), _bytebuffer2.default.DEFAULT_CAPACITY, _bytebuffer2.default.LITTLE_ENDIAN);\n    try {\n        mbuf.mark();\n        return '#' + mbuf.readVString();\n    } catch (e) {\n        mbuf.reset();\n        // Sender did not length-prefix the memo\n        memo = new Buffer(mbuf.toString('binary'), 'binary').toString('utf-8');\n        return '#' + memo;\n    }\n}\n\n/**\n    Some fields are only required if the memo is marked for encryption (starts with a hash).\n    @arg {string|PrivateKey} private_key - WIF or PrivateKey object\n    @arg {string|PublicKey} public_key - Recipient\n    @arg {string} memo - plain text is returned, hash prefix text is encrypted\n    @arg {string} [testNonce = undefined] - just for testing\n    @return {string} - base64 decoded string (or plain text)\n*/\nfunction encode(private_key, public_key, memo, testNonce) {\n    (0, _assert2.default)(memo, 'memo is required');\n    _assert2.default.equal(typeof memo === 'undefined' ? 'undefined' : _typeof(memo), 'string', 'memo');\n    if (!/^#/.test(memo)) return memo;\n    memo = memo.substring(1);\n\n    (0, _assert2.default)(private_key, 'private_key is required');\n    (0, _assert2.default)(public_key, 'public_key is required');\n    checkEncryption();\n\n    private_key = toPrivateObj(private_key);\n    public_key = toPublicObj(public_key);\n\n    var mbuf = new _bytebuffer2.default(_bytebuffer2.default.DEFAULT_CAPACITY, _bytebuffer2.default.LITTLE_ENDIAN);\n    mbuf.writeVString(memo);\n    memo = new Buffer(mbuf.copy(0, mbuf.offset).toBinary(), 'binary');\n\n    var _Aes$encrypt = _ecc.Aes.encrypt(private_key, public_key, memo, testNonce),\n        nonce = _Aes$encrypt.nonce,\n        message = _Aes$encrypt.message,\n        checksum = _Aes$encrypt.checksum;\n\n    memo = encMemo.fromObject({\n        from: private_key.toPublicKey(),\n        to: public_key,\n        nonce: nonce,\n        check: checksum,\n        encrypted: message\n    });\n    // serialize\n    memo = encMemo.toBuffer(memo);\n    return '#' + _bs2.default.encode(new Buffer(memo, 'binary'));\n}\n\nvar encodeTest = undefined;\n\n/**\n  Memo encryption has failed in the browser before.  An Error will be thrown\n  if a memo can't be encrypted and decrypted.\n*/\nfunction checkEncryption() {\n    if (encodeTest === undefined) {\n        var plaintext = void 0;\n        encodeTest = true; // prevent infinate looping\n        try {\n            var wif = '5JdeC9P7Pbd1uGdFVEsJ41EkEnADbbHGq6p1BwFxm6txNBsQnsw';\n            var pubkey = 'STM8m5UgaFAAYQRuaNejYdS8FVLVp9Ss3K1qAVk5de6F8s3HnVbvA';\n            var cyphertext = encode(wif, pubkey, '#memo爱');\n            plaintext = decode(wif, cyphertext);\n        } catch (e) {\n            console.error(e);\n        } finally {\n            encodeTest = plaintext === '#memo爱';\n        }\n    }\n    if (encodeTest === false) throw new Error('This environment does not support encryption.');\n}\n\nvar toPrivateObj = function toPrivateObj(o) {\n    return o ? o.d ? o : _ecc.PrivateKey.fromWif(o) : o /*null or undefined*/;\n};\nvar toPublicObj = function toPublicObj(o) {\n    return o ? o.Q ? o : _ecc.PublicKey.fromString(o) : o /*null or undefined*/;\n};"},"lineCount":148}},"hash":"f8c0c1eb9ddd873cfac5356a3120de4a","cacheData":{"env":{}}}