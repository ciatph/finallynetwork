{"id":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","dependencies":[{"name":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/package.json","includedInParent":true,"mtime":1516696569000},{"name":"/Users/sam/Documents/Projects/steem/finallynetwork/package.json","includedInParent":true,"mtime":1536781094103},{"name":"/Users/sam/Documents/Projects/steem/finallynetwork/.babelrc","includedInParent":true,"mtime":1535982004941},{"name":"bigi","loc":{"line":10,"column":21},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/src/key_public.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/bigi/lib/index.js"},{"name":"ecurve","loc":{"line":8,"column":21},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/src/key_public.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/ecurve/lib/index.js"},{"name":"bs58","loc":{"line":11,"column":21},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/src/key_public.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/bs58/index.js"},{"name":"./hash","loc":{"line":12,"column":19},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/src/key_public.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/src/hash.js"},{"name":"../../../config","loc":{"line":13,"column":21},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/src/key_public.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/config.js"},{"name":"assert","loc":{"line":14,"column":21},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/src/key_public.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/assert/assert.js"},{"name":"buffer","parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/src/key_public.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar BigInteger = require('bigi');\nvar ecurve = require('ecurve');\nvar secp256k1 = ecurve.getCurveByName('secp256k1');\nBigInteger = require('bigi');\nvar base58 = require('bs58');\nvar hash = require('./hash');\nvar config = require('../../../config');\nvar assert = require('assert');\n\nvar G = secp256k1.G;\nvar n = secp256k1.n;\n\nvar PublicKey = function () {\n\n    /** @param {ecurve.Point} public key */\n    function PublicKey(Q) {\n        _classCallCheck(this, PublicKey);\n\n        this.Q = Q;\n    }\n\n    _createClass(PublicKey, [{\n        key: 'toBuffer',\n        value: function toBuffer() {\n            var compressed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.Q.compressed;\n\n            return this.Q.getEncoded(compressed);\n        }\n    }, {\n        key: 'toUncompressed',\n        value: function toUncompressed() {\n            var buf = this.Q.getEncoded(false);\n            var point = ecurve.Point.decodeFrom(secp256k1, buf);\n            return PublicKey.fromPoint(point);\n        }\n\n        /** bts::blockchain::address (unique but not a full public key) */\n\n    }, {\n        key: 'toBlockchainAddress',\n        value: function toBlockchainAddress() {\n            var pub_buf = this.toBuffer();\n            var pub_sha = hash.sha512(pub_buf);\n            return hash.ripemd160(pub_sha);\n        }\n    }, {\n        key: 'toString',\n        value: function toString() {\n            var address_prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : config.get('address_prefix');\n\n            return this.toPublicKeyString(address_prefix);\n        }\n\n        /**\n            Full public key\n            {return} string\n        */\n\n    }, {\n        key: 'toPublicKeyString',\n        value: function toPublicKeyString() {\n            var address_prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : config.get('address_prefix');\n\n            if (this.pubdata) return address_prefix + this.pubdata;\n            var pub_buf = this.toBuffer();\n            var checksum = hash.ripemd160(pub_buf);\n            var addy = Buffer.concat([pub_buf, checksum.slice(0, 4)]);\n            this.pubdata = base58.encode(addy);\n            return address_prefix + this.pubdata;\n        }\n\n        /**\n            @arg {string} public_key - like STMXyz...\n            @arg {string} address_prefix - like STM\n            @return PublicKey or `null` (if the public_key string is invalid)\n            @deprecated fromPublicKeyString (use fromString instead)\n        */\n\n    }, {\n        key: 'toAddressString',\n        value: function toAddressString() {\n            var address_prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : config.get('address_prefix');\n\n            var pub_buf = this.toBuffer();\n            var pub_sha = hash.sha512(pub_buf);\n            var addy = hash.ripemd160(pub_sha);\n            var checksum = hash.ripemd160(addy);\n            addy = Buffer.concat([addy, checksum.slice(0, 4)]);\n            return address_prefix + base58.encode(addy);\n        }\n    }, {\n        key: 'toPtsAddy',\n        value: function toPtsAddy() {\n            var pub_buf = this.toBuffer();\n            var pub_sha = hash.sha256(pub_buf);\n            var addy = hash.ripemd160(pub_sha);\n            addy = Buffer.concat([new Buffer([0x38]), addy]); //version 56(decimal)\n\n            var checksum = hash.sha256(addy);\n            checksum = hash.sha256(checksum);\n\n            addy = Buffer.concat([addy, checksum.slice(0, 4)]);\n            return base58.encode(addy);\n        }\n    }, {\n        key: 'child',\n        value: function child(offset) {\n\n            assert(Buffer.isBuffer(offset), \"Buffer required: offset\");\n            assert.equal(offset.length, 32, \"offset length\");\n\n            offset = Buffer.concat([this.toBuffer(), offset]);\n            offset = hash.sha256(offset);\n\n            var c = BigInteger.fromBuffer(offset);\n\n            if (c.compareTo(n) >= 0) throw new Error(\"Child offset went out of bounds, try again\");\n\n            var cG = G.multiply(c);\n            var Qprime = this.Q.add(cG);\n\n            if (secp256k1.isInfinity(Qprime)) throw new Error(\"Child offset derived to an invalid key, try again\");\n\n            return PublicKey.fromPoint(Qprime);\n        }\n\n        // toByteBuffer() {\n        //     var b = new ByteBuffer(ByteBuffer.DEFAULT_CAPACITY, ByteBuffer.LITTLE_ENDIAN);\n        //     this.appendByteBuffer(b);\n        //     return b.copy(0, b.offset);\n        // }\n\n    }, {\n        key: 'toHex',\n        value: function toHex() {\n            return this.toBuffer().toString('hex');\n        }\n    }], [{\n        key: 'fromBinary',\n        value: function fromBinary(bin) {\n            return PublicKey.fromBuffer(new Buffer(bin, 'binary'));\n        }\n    }, {\n        key: 'fromBuffer',\n        value: function fromBuffer(buffer) {\n            return new PublicKey(ecurve.Point.decodeFrom(secp256k1, buffer));\n        }\n    }, {\n        key: 'fromPoint',\n        value: function fromPoint(point) {\n            return new PublicKey(point);\n        }\n    }, {\n        key: 'fromString',\n        value: function fromString(public_key) {\n            var address_prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : config.get('address_prefix');\n\n            try {\n                return PublicKey.fromStringOrThrow(public_key, address_prefix);\n            } catch (e) {\n                return null;\n            }\n        }\n\n        /**\n            @arg {string} public_key - like STMXyz...\n            @arg {string} address_prefix - like STM\n            @throws {Error} if public key is invalid\n            @return PublicKey\n        */\n\n    }, {\n        key: 'fromStringOrThrow',\n        value: function fromStringOrThrow(public_key) {\n            var address_prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : config.get('address_prefix');\n\n            var prefix = public_key.slice(0, address_prefix.length);\n            assert.equal(address_prefix, prefix, 'Expecting key to begin with ' + address_prefix + ', instead got ' + prefix);\n            public_key = public_key.slice(address_prefix.length);\n\n            public_key = new Buffer(base58.decode(public_key), 'binary');\n            var checksum = public_key.slice(-4);\n            public_key = public_key.slice(0, -4);\n            var new_checksum = hash.ripemd160(public_key);\n            new_checksum = new_checksum.slice(0, 4);\n            assert.deepEqual(checksum, new_checksum, 'Checksum did not match');\n            return PublicKey.fromBuffer(public_key);\n        }\n    }, {\n        key: 'fromHex',\n        value: function fromHex(hex) {\n            return PublicKey.fromBuffer(new Buffer(hex, 'hex'));\n        }\n    }, {\n        key: 'fromStringHex',\n        value: function fromStringHex(hex) {\n            return PublicKey.fromString(new Buffer(hex, 'hex'));\n        }\n\n        /* </HEX> */\n\n    }]);\n\n    return PublicKey;\n}();\n\nmodule.exports = PublicKey;","map":{"mappings":[{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/key_public.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}}],"sources":{"../../node_modules/steem/lib/auth/ecc/src/key_public.js":"'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar BigInteger = require('bigi');\nvar ecurve = require('ecurve');\nvar secp256k1 = ecurve.getCurveByName('secp256k1');\nBigInteger = require('bigi');\nvar base58 = require('bs58');\nvar hash = require('./hash');\nvar config = require('../../../config');\nvar assert = require('assert');\n\nvar G = secp256k1.G;\nvar n = secp256k1.n;\n\nvar PublicKey = function () {\n\n    /** @param {ecurve.Point} public key */\n    function PublicKey(Q) {\n        _classCallCheck(this, PublicKey);\n\n        this.Q = Q;\n    }\n\n    _createClass(PublicKey, [{\n        key: 'toBuffer',\n        value: function toBuffer() {\n            var compressed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.Q.compressed;\n\n            return this.Q.getEncoded(compressed);\n        }\n    }, {\n        key: 'toUncompressed',\n        value: function toUncompressed() {\n            var buf = this.Q.getEncoded(false);\n            var point = ecurve.Point.decodeFrom(secp256k1, buf);\n            return PublicKey.fromPoint(point);\n        }\n\n        /** bts::blockchain::address (unique but not a full public key) */\n\n    }, {\n        key: 'toBlockchainAddress',\n        value: function toBlockchainAddress() {\n            var pub_buf = this.toBuffer();\n            var pub_sha = hash.sha512(pub_buf);\n            return hash.ripemd160(pub_sha);\n        }\n    }, {\n        key: 'toString',\n        value: function toString() {\n            var address_prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : config.get('address_prefix');\n\n            return this.toPublicKeyString(address_prefix);\n        }\n\n        /**\n            Full public key\n            {return} string\n        */\n\n    }, {\n        key: 'toPublicKeyString',\n        value: function toPublicKeyString() {\n            var address_prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : config.get('address_prefix');\n\n            if (this.pubdata) return address_prefix + this.pubdata;\n            var pub_buf = this.toBuffer();\n            var checksum = hash.ripemd160(pub_buf);\n            var addy = Buffer.concat([pub_buf, checksum.slice(0, 4)]);\n            this.pubdata = base58.encode(addy);\n            return address_prefix + this.pubdata;\n        }\n\n        /**\n            @arg {string} public_key - like STMXyz...\n            @arg {string} address_prefix - like STM\n            @return PublicKey or `null` (if the public_key string is invalid)\n            @deprecated fromPublicKeyString (use fromString instead)\n        */\n\n    }, {\n        key: 'toAddressString',\n        value: function toAddressString() {\n            var address_prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : config.get('address_prefix');\n\n            var pub_buf = this.toBuffer();\n            var pub_sha = hash.sha512(pub_buf);\n            var addy = hash.ripemd160(pub_sha);\n            var checksum = hash.ripemd160(addy);\n            addy = Buffer.concat([addy, checksum.slice(0, 4)]);\n            return address_prefix + base58.encode(addy);\n        }\n    }, {\n        key: 'toPtsAddy',\n        value: function toPtsAddy() {\n            var pub_buf = this.toBuffer();\n            var pub_sha = hash.sha256(pub_buf);\n            var addy = hash.ripemd160(pub_sha);\n            addy = Buffer.concat([new Buffer([0x38]), addy]); //version 56(decimal)\n\n            var checksum = hash.sha256(addy);\n            checksum = hash.sha256(checksum);\n\n            addy = Buffer.concat([addy, checksum.slice(0, 4)]);\n            return base58.encode(addy);\n        }\n    }, {\n        key: 'child',\n        value: function child(offset) {\n\n            assert(Buffer.isBuffer(offset), \"Buffer required: offset\");\n            assert.equal(offset.length, 32, \"offset length\");\n\n            offset = Buffer.concat([this.toBuffer(), offset]);\n            offset = hash.sha256(offset);\n\n            var c = BigInteger.fromBuffer(offset);\n\n            if (c.compareTo(n) >= 0) throw new Error(\"Child offset went out of bounds, try again\");\n\n            var cG = G.multiply(c);\n            var Qprime = this.Q.add(cG);\n\n            if (secp256k1.isInfinity(Qprime)) throw new Error(\"Child offset derived to an invalid key, try again\");\n\n            return PublicKey.fromPoint(Qprime);\n        }\n\n        // toByteBuffer() {\n        //     var b = new ByteBuffer(ByteBuffer.DEFAULT_CAPACITY, ByteBuffer.LITTLE_ENDIAN);\n        //     this.appendByteBuffer(b);\n        //     return b.copy(0, b.offset);\n        // }\n\n    }, {\n        key: 'toHex',\n        value: function toHex() {\n            return this.toBuffer().toString('hex');\n        }\n    }], [{\n        key: 'fromBinary',\n        value: function fromBinary(bin) {\n            return PublicKey.fromBuffer(new Buffer(bin, 'binary'));\n        }\n    }, {\n        key: 'fromBuffer',\n        value: function fromBuffer(buffer) {\n            return new PublicKey(ecurve.Point.decodeFrom(secp256k1, buffer));\n        }\n    }, {\n        key: 'fromPoint',\n        value: function fromPoint(point) {\n            return new PublicKey(point);\n        }\n    }, {\n        key: 'fromString',\n        value: function fromString(public_key) {\n            var address_prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : config.get('address_prefix');\n\n            try {\n                return PublicKey.fromStringOrThrow(public_key, address_prefix);\n            } catch (e) {\n                return null;\n            }\n        }\n\n        /**\n            @arg {string} public_key - like STMXyz...\n            @arg {string} address_prefix - like STM\n            @throws {Error} if public key is invalid\n            @return PublicKey\n        */\n\n    }, {\n        key: 'fromStringOrThrow',\n        value: function fromStringOrThrow(public_key) {\n            var address_prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : config.get('address_prefix');\n\n            var prefix = public_key.slice(0, address_prefix.length);\n            assert.equal(address_prefix, prefix, 'Expecting key to begin with ' + address_prefix + ', instead got ' + prefix);\n            public_key = public_key.slice(address_prefix.length);\n\n            public_key = new Buffer(base58.decode(public_key), 'binary');\n            var checksum = public_key.slice(-4);\n            public_key = public_key.slice(0, -4);\n            var new_checksum = hash.ripemd160(public_key);\n            new_checksum = new_checksum.slice(0, 4);\n            assert.deepEqual(checksum, new_checksum, 'Checksum did not match');\n            return PublicKey.fromBuffer(public_key);\n        }\n    }, {\n        key: 'fromHex',\n        value: function fromHex(hex) {\n            return PublicKey.fromBuffer(new Buffer(hex, 'hex'));\n        }\n    }, {\n        key: 'fromStringHex',\n        value: function fromStringHex(hex) {\n            return PublicKey.fromString(new Buffer(hex, 'hex'));\n        }\n\n        /* </HEX> */\n\n    }]);\n\n    return PublicKey;\n}();\n\nmodule.exports = PublicKey;"},"lineCount":214}},"hash":"da933eb34ca924004bf756fcf4ecfa0a","cacheData":{"env":{}}}