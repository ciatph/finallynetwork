{"id":"../../node_modules/steem/lib/auth/index.js","dependencies":[{"name":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/package.json","includedInParent":true,"mtime":1536067589205},{"name":"/Users/sam/Documents/Projects/steem/finallynetwork/package.json","includedInParent":true,"mtime":1536781094103},{"name":"/Users/sam/Documents/Projects/steem/finallynetwork/.babelrc","includedInParent":true,"mtime":1535982004941},{"name":"bigi","loc":{"line":3,"column":19},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/index.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/bigi/lib/index.js"},{"name":"bs58","loc":{"line":4,"column":19},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/index.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/bs58/index.js"},{"name":"ecurve","loc":{"line":5,"column":21},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/index.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/ecurve/lib/index.js"},{"name":"../config","loc":{"line":8,"column":21},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/index.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/config.js"},{"name":"./serializer/src/operations","loc":{"line":9,"column":25},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/index.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/serializer/src/operations.js"},{"name":"./ecc/src/signature","loc":{"line":10,"column":24},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/index.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/src/signature.js"},{"name":"./ecc/src/key_private","loc":{"line":11,"column":25},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/index.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/src/key_private.js"},{"name":"./ecc/src/key_public","loc":{"line":12,"column":24},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/index.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/src/key_public.js"},{"name":"./ecc/src/hash","loc":{"line":13,"column":19},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/index.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/src/hash.js"},{"name":"buffer","parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/index.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict';\n\nvar bigi = require('bigi'),\n    bs58 = require('bs58'),\n    ecurve = require('ecurve'),\n    Point = ecurve.Point,\n    secp256k1 = ecurve.getCurveByName('secp256k1'),\n    config = require('../config'),\n    operations = require('./serializer/src/operations'),\n    Signature = require('./ecc/src/signature'),\n    KeyPrivate = require('./ecc/src/key_private'),\n    PublicKey = require('./ecc/src/key_public'),\n    hash = require('./ecc/src/hash');\n\nvar Auth = {};\nvar transaction = operations.transaction;\nvar signed_transaction = operations.signed_transaction;\n\nAuth.verify = function (name, password, auths) {\n\tvar hasKey = false;\n\tvar roles = [];\n\tfor (var role in auths) {\n\t\troles.push(role);\n\t}\n\tvar pubKeys = this.generateKeys(name, password, roles);\n\troles.forEach(function (role) {\n\t\tif (auths[role][0][0] === pubKeys[role]) {\n\t\t\thasKey = true;\n\t\t}\n\t});\n\treturn hasKey;\n};\n\nAuth.generateKeys = function (name, password, roles) {\n\tvar pubKeys = {};\n\troles.forEach(function (role) {\n\t\tvar seed = name + role + password;\n\t\tvar brainKey = seed.trim().split(/[\\t\\n\\v\\f\\r ]+/).join(' ');\n\t\tvar hashSha256 = hash.sha256(brainKey);\n\t\tvar bigInt = bigi.fromBuffer(hashSha256);\n\t\tvar toPubKey = secp256k1.G.multiply(bigInt);\n\t\tvar point = new Point(toPubKey.curve, toPubKey.x, toPubKey.y, toPubKey.z);\n\t\tvar pubBuf = point.getEncoded(toPubKey.compressed);\n\t\tvar checksum = hash.ripemd160(pubBuf);\n\t\tvar addy = Buffer.concat([pubBuf, checksum.slice(0, 4)]);\n\t\tpubKeys[role] = config.get('address_prefix') + bs58.encode(addy);\n\t});\n\treturn pubKeys;\n};\n\n/**\n\t@arg {string} name - blockchain account name\n\t@arg {string} password - very strong password typically no shorter than a private key\n\t@arg {array} roles - defaults to standard Steem blockchain-level roles\n*/\nAuth.getPrivateKeys = function (name, password) {\n\tvar roles = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ['owner', 'active', 'posting', 'memo'];\n\n\tvar privKeys = {};\n\troles.forEach(function (role) {\n\t\tprivKeys[role] = this.toWif(name, password, role);\n\t\tprivKeys[role + 'Pubkey'] = this.wifToPublic(privKeys[role]);\n\t}.bind(this));\n\treturn privKeys;\n};\n\nAuth.isWif = function (privWif) {\n\tvar isWif = false;\n\ttry {\n\t\tvar bufWif = new Buffer(bs58.decode(privWif));\n\t\tvar privKey = bufWif.slice(0, -4);\n\t\tvar checksum = bufWif.slice(-4);\n\t\tvar newChecksum = hash.sha256(privKey);\n\t\tnewChecksum = hash.sha256(newChecksum);\n\t\tnewChecksum = newChecksum.slice(0, 4);\n\t\tif (checksum.toString() == newChecksum.toString()) {\n\t\t\tisWif = true;\n\t\t}\n\t} catch (e) {}\n\treturn isWif;\n};\n\nAuth.toWif = function (name, password, role) {\n\tvar seed = name + role + password;\n\tvar brainKey = seed.trim().split(/[\\t\\n\\v\\f\\r ]+/).join(' ');\n\tvar hashSha256 = hash.sha256(brainKey);\n\tvar privKey = Buffer.concat([new Buffer([0x80]), hashSha256]);\n\tvar checksum = hash.sha256(privKey);\n\tchecksum = hash.sha256(checksum);\n\tchecksum = checksum.slice(0, 4);\n\tvar privWif = Buffer.concat([privKey, checksum]);\n\treturn bs58.encode(privWif);\n};\n\nAuth.wifIsValid = function (privWif, pubWif) {\n\treturn this.wifToPublic(privWif) == pubWif;\n};\n\nAuth.wifToPublic = function (privWif) {\n\tvar pubWif = KeyPrivate.fromWif(privWif);\n\tpubWif = pubWif.toPublic().toString();\n\treturn pubWif;\n};\n\nAuth.isPubkey = function (pubkey, address_prefix) {\n\treturn PublicKey.fromString(pubkey, address_prefix) != null;\n};\n\nAuth.signTransaction = function (trx, keys) {\n\tvar signatures = [];\n\tif (trx.signatures) {\n\t\tsignatures = [].concat(trx.signatures);\n\t}\n\n\tvar cid = new Buffer(config.get('chain_id'), 'hex');\n\tvar buf = transaction.toBuffer(trx);\n\n\tfor (var key in keys) {\n\t\tvar sig = Signature.signBuffer(Buffer.concat([cid, buf]), keys[key]);\n\t\tsignatures.push(sig.toBuffer());\n\t}\n\n\treturn signed_transaction.toObject(Object.assign(trx, { signatures: signatures }));\n};\n\nmodule.exports = Auth;","map":{"mappings":[{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/steem/lib/auth/index.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}}],"sources":{"../../node_modules/steem/lib/auth/index.js":"'use strict';\n\nvar bigi = require('bigi'),\n    bs58 = require('bs58'),\n    ecurve = require('ecurve'),\n    Point = ecurve.Point,\n    secp256k1 = ecurve.getCurveByName('secp256k1'),\n    config = require('../config'),\n    operations = require('./serializer/src/operations'),\n    Signature = require('./ecc/src/signature'),\n    KeyPrivate = require('./ecc/src/key_private'),\n    PublicKey = require('./ecc/src/key_public'),\n    hash = require('./ecc/src/hash');\n\nvar Auth = {};\nvar transaction = operations.transaction;\nvar signed_transaction = operations.signed_transaction;\n\nAuth.verify = function (name, password, auths) {\n\tvar hasKey = false;\n\tvar roles = [];\n\tfor (var role in auths) {\n\t\troles.push(role);\n\t}\n\tvar pubKeys = this.generateKeys(name, password, roles);\n\troles.forEach(function (role) {\n\t\tif (auths[role][0][0] === pubKeys[role]) {\n\t\t\thasKey = true;\n\t\t}\n\t});\n\treturn hasKey;\n};\n\nAuth.generateKeys = function (name, password, roles) {\n\tvar pubKeys = {};\n\troles.forEach(function (role) {\n\t\tvar seed = name + role + password;\n\t\tvar brainKey = seed.trim().split(/[\\t\\n\\v\\f\\r ]+/).join(' ');\n\t\tvar hashSha256 = hash.sha256(brainKey);\n\t\tvar bigInt = bigi.fromBuffer(hashSha256);\n\t\tvar toPubKey = secp256k1.G.multiply(bigInt);\n\t\tvar point = new Point(toPubKey.curve, toPubKey.x, toPubKey.y, toPubKey.z);\n\t\tvar pubBuf = point.getEncoded(toPubKey.compressed);\n\t\tvar checksum = hash.ripemd160(pubBuf);\n\t\tvar addy = Buffer.concat([pubBuf, checksum.slice(0, 4)]);\n\t\tpubKeys[role] = config.get('address_prefix') + bs58.encode(addy);\n\t});\n\treturn pubKeys;\n};\n\n/**\n\t@arg {string} name - blockchain account name\n\t@arg {string} password - very strong password typically no shorter than a private key\n\t@arg {array} roles - defaults to standard Steem blockchain-level roles\n*/\nAuth.getPrivateKeys = function (name, password) {\n\tvar roles = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ['owner', 'active', 'posting', 'memo'];\n\n\tvar privKeys = {};\n\troles.forEach(function (role) {\n\t\tprivKeys[role] = this.toWif(name, password, role);\n\t\tprivKeys[role + 'Pubkey'] = this.wifToPublic(privKeys[role]);\n\t}.bind(this));\n\treturn privKeys;\n};\n\nAuth.isWif = function (privWif) {\n\tvar isWif = false;\n\ttry {\n\t\tvar bufWif = new Buffer(bs58.decode(privWif));\n\t\tvar privKey = bufWif.slice(0, -4);\n\t\tvar checksum = bufWif.slice(-4);\n\t\tvar newChecksum = hash.sha256(privKey);\n\t\tnewChecksum = hash.sha256(newChecksum);\n\t\tnewChecksum = newChecksum.slice(0, 4);\n\t\tif (checksum.toString() == newChecksum.toString()) {\n\t\t\tisWif = true;\n\t\t}\n\t} catch (e) {}\n\treturn isWif;\n};\n\nAuth.toWif = function (name, password, role) {\n\tvar seed = name + role + password;\n\tvar brainKey = seed.trim().split(/[\\t\\n\\v\\f\\r ]+/).join(' ');\n\tvar hashSha256 = hash.sha256(brainKey);\n\tvar privKey = Buffer.concat([new Buffer([0x80]), hashSha256]);\n\tvar checksum = hash.sha256(privKey);\n\tchecksum = hash.sha256(checksum);\n\tchecksum = checksum.slice(0, 4);\n\tvar privWif = Buffer.concat([privKey, checksum]);\n\treturn bs58.encode(privWif);\n};\n\nAuth.wifIsValid = function (privWif, pubWif) {\n\treturn this.wifToPublic(privWif) == pubWif;\n};\n\nAuth.wifToPublic = function (privWif) {\n\tvar pubWif = KeyPrivate.fromWif(privWif);\n\tpubWif = pubWif.toPublic().toString();\n\treturn pubWif;\n};\n\nAuth.isPubkey = function (pubkey, address_prefix) {\n\treturn PublicKey.fromString(pubkey, address_prefix) != null;\n};\n\nAuth.signTransaction = function (trx, keys) {\n\tvar signatures = [];\n\tif (trx.signatures) {\n\t\tsignatures = [].concat(trx.signatures);\n\t}\n\n\tvar cid = new Buffer(config.get('chain_id'), 'hex');\n\tvar buf = transaction.toBuffer(trx);\n\n\tfor (var key in keys) {\n\t\tvar sig = Signature.signBuffer(Buffer.concat([cid, buf]), keys[key]);\n\t\tsignatures.push(sig.toBuffer());\n\t}\n\n\treturn signed_transaction.toObject(Object.assign(trx, { signatures: signatures }));\n};\n\nmodule.exports = Auth;"},"lineCount":127}},"hash":"f6c0ea26a404ac092859e3f812046f09","cacheData":{"env":{}}}