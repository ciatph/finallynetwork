{"id":"../../node_modules/bigi/lib/convert.js","dependencies":[{"name":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/bigi/package.json","includedInParent":true,"mtime":1536067589204},{"name":"/Users/sam/Documents/Projects/steem/finallynetwork/package.json","includedInParent":true,"mtime":1536781094103},{"name":"/Users/sam/Documents/Projects/steem/finallynetwork/.babelrc","includedInParent":true,"mtime":1535982004941},{"name":"assert","loc":{"line":2,"column":21},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/bigi/lib/convert.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/assert/assert.js"},{"name":"./bigi","loc":{"line":3,"column":25},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/bigi/lib/convert.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/bigi/lib/bigi.js"},{"name":"buffer","parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/bigi/lib/convert.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n// FIXME: Kind of a weird way to throw exceptions, consider removing\nvar assert = require('assert')\nvar BigInteger = require('./bigi')\n\n/**\n * Turns a byte array into a big integer.\n *\n * This function will interpret a byte array as a big integer in big\n * endian notation.\n */\nBigInteger.fromByteArrayUnsigned = function(byteArray) {\n  // BigInteger expects a DER integer conformant byte array\n  if (byteArray[0] & 0x80) {\n    return new BigInteger([0].concat(byteArray))\n  }\n\n  return new BigInteger(byteArray)\n}\n\n/**\n * Returns a byte array representation of the big integer.\n *\n * This returns the absolute of the contained value in big endian\n * form. A value of zero results in an empty array.\n */\nBigInteger.prototype.toByteArrayUnsigned = function() {\n  var byteArray = this.toByteArray()\n  return byteArray[0] === 0 ? byteArray.slice(1) : byteArray\n}\n\nBigInteger.fromDERInteger = function(byteArray) {\n  return new BigInteger(byteArray)\n}\n\n/*\n * Converts BigInteger to a DER integer representation.\n *\n * The format for this value uses the most significant bit as a sign\n * bit.  If the most significant bit is already set and the integer is\n * positive, a 0x00 is prepended.\n *\n * Examples:\n *\n *      0 =>     0x00\n *      1 =>     0x01\n *     -1 =>     0xff\n *    127 =>     0x7f\n *   -127 =>     0x81\n *    128 =>   0x0080\n *   -128 =>     0x80\n *    255 =>   0x00ff\n *   -255 =>   0xff01\n *  16300 =>   0x3fac\n * -16300 =>   0xc054\n *  62300 => 0x00f35c\n * -62300 => 0xff0ca4\n*/\nBigInteger.prototype.toDERInteger = BigInteger.prototype.toByteArray\n\nBigInteger.fromBuffer = function(buffer) {\n  // BigInteger expects a DER integer conformant byte array\n  if (buffer[0] & 0x80) {\n    var byteArray = Array.prototype.slice.call(buffer)\n\n    return new BigInteger([0].concat(byteArray))\n  }\n\n  return new BigInteger(buffer)\n}\n\nBigInteger.fromHex = function(hex) {\n  if (hex === '') return BigInteger.ZERO\n\n  assert.equal(hex, hex.match(/^[A-Fa-f0-9]+/), 'Invalid hex string')\n  assert.equal(hex.length % 2, 0, 'Incomplete hex')\n  return new BigInteger(hex, 16)\n}\n\nBigInteger.prototype.toBuffer = function(size) {\n  var byteArray = this.toByteArrayUnsigned()\n  var zeros = []\n\n  var padding = size - byteArray.length\n  while (zeros.length < padding) zeros.push(0)\n\n  return new Buffer(zeros.concat(byteArray))\n}\n\nBigInteger.prototype.toHex = function(size) {\n  return this.toBuffer(size).toString('hex')\n}\n","map":{"mappings":[{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/bigi/lib/convert.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}}],"sources":{"../../node_modules/bigi/lib/convert.js":"// FIXME: Kind of a weird way to throw exceptions, consider removing\nvar assert = require('assert')\nvar BigInteger = require('./bigi')\n\n/**\n * Turns a byte array into a big integer.\n *\n * This function will interpret a byte array as a big integer in big\n * endian notation.\n */\nBigInteger.fromByteArrayUnsigned = function(byteArray) {\n  // BigInteger expects a DER integer conformant byte array\n  if (byteArray[0] & 0x80) {\n    return new BigInteger([0].concat(byteArray))\n  }\n\n  return new BigInteger(byteArray)\n}\n\n/**\n * Returns a byte array representation of the big integer.\n *\n * This returns the absolute of the contained value in big endian\n * form. A value of zero results in an empty array.\n */\nBigInteger.prototype.toByteArrayUnsigned = function() {\n  var byteArray = this.toByteArray()\n  return byteArray[0] === 0 ? byteArray.slice(1) : byteArray\n}\n\nBigInteger.fromDERInteger = function(byteArray) {\n  return new BigInteger(byteArray)\n}\n\n/*\n * Converts BigInteger to a DER integer representation.\n *\n * The format for this value uses the most significant bit as a sign\n * bit.  If the most significant bit is already set and the integer is\n * positive, a 0x00 is prepended.\n *\n * Examples:\n *\n *      0 =>     0x00\n *      1 =>     0x01\n *     -1 =>     0xff\n *    127 =>     0x7f\n *   -127 =>     0x81\n *    128 =>   0x0080\n *   -128 =>     0x80\n *    255 =>   0x00ff\n *   -255 =>   0xff01\n *  16300 =>   0x3fac\n * -16300 =>   0xc054\n *  62300 => 0x00f35c\n * -62300 => 0xff0ca4\n*/\nBigInteger.prototype.toDERInteger = BigInteger.prototype.toByteArray\n\nBigInteger.fromBuffer = function(buffer) {\n  // BigInteger expects a DER integer conformant byte array\n  if (buffer[0] & 0x80) {\n    var byteArray = Array.prototype.slice.call(buffer)\n\n    return new BigInteger([0].concat(byteArray))\n  }\n\n  return new BigInteger(buffer)\n}\n\nBigInteger.fromHex = function(hex) {\n  if (hex === '') return BigInteger.ZERO\n\n  assert.equal(hex, hex.match(/^[A-Fa-f0-9]+/), 'Invalid hex string')\n  assert.equal(hex.length % 2, 0, 'Incomplete hex')\n  return new BigInteger(hex, 16)\n}\n\nBigInteger.prototype.toBuffer = function(size) {\n  var byteArray = this.toByteArrayUnsigned()\n  var zeros = []\n\n  var padding = size - byteArray.length\n  while (zeros.length < padding) zeros.push(0)\n\n  return new Buffer(zeros.concat(byteArray))\n}\n\nBigInteger.prototype.toHex = function(size) {\n  return this.toBuffer(size).toString('hex')\n}\n"},"lineCount":93}},"hash":"41f1ce363e00610e7cc6e4afaa77192d","cacheData":{"env":{}}}