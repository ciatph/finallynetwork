{"id":"../../node_modules/steem/lib/auth/ecc/src/aes.js","dependencies":[{"name":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/package.json","includedInParent":true,"mtime":1516696569000},{"name":"/Users/sam/Documents/Projects/steem/finallynetwork/package.json","includedInParent":true,"mtime":1536781094103},{"name":"/Users/sam/Documents/Projects/steem/finallynetwork/.babelrc","includedInParent":true,"mtime":1535982004941},{"name":"secure-random","loc":{"line":9,"column":28},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/src/aes.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/secure-random/lib/secure-random.js"},{"name":"bytebuffer","loc":{"line":13,"column":26},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/src/aes.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/bytebuffer/dist/bytebuffer.js"},{"name":"browserify-aes","loc":{"line":17,"column":29},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/src/aes.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/browserify-aes/browser.js"},{"name":"assert","loc":{"line":21,"column":22},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/src/aes.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/assert/assert.js"},{"name":"./key_public","loc":{"line":25,"column":26},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/src/aes.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/src/key_public.js"},{"name":"./key_private","loc":{"line":29,"column":27},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/src/aes.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/src/key_private.js"},{"name":"./hash","loc":{"line":33,"column":20},"parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/src/aes.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/src/hash.js"},{"name":"buffer","parent":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/steem/lib/auth/ecc/src/aes.js","resolved":"/Users/sam/Documents/Projects/steem/finallynetwork/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.encrypt = encrypt;\nexports.decrypt = decrypt;\n\nvar _secureRandom = require('secure-random');\n\nvar _secureRandom2 = _interopRequireDefault(_secureRandom);\n\nvar _bytebuffer = require('bytebuffer');\n\nvar _bytebuffer2 = _interopRequireDefault(_bytebuffer);\n\nvar _browserifyAes = require('browserify-aes');\n\nvar _browserifyAes2 = _interopRequireDefault(_browserifyAes);\n\nvar _assert = require('assert');\n\nvar _assert2 = _interopRequireDefault(_assert);\n\nvar _key_public = require('./key_public');\n\nvar _key_public2 = _interopRequireDefault(_key_public);\n\nvar _key_private = require('./key_private');\n\nvar _key_private2 = _interopRequireDefault(_key_private);\n\nvar _hash = require('./hash');\n\nvar _hash2 = _interopRequireDefault(_hash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Long = _bytebuffer2.default.Long;\n\n/**\n    Spec: http://localhost:3002/steem/@dantheman/how-to-encrypt-a-memo-when-transferring-steem\n    @throws {Error|TypeError} - \"Invalid Key, ...\"\n    @arg {PrivateKey} private_key - required and used for decryption\n    @arg {PublicKey} public_key - required and used to calcualte the shared secret\n    @arg {string} [nonce = uniqueNonce()] - assigned a random unique uint64\n\n    @return {object}\n    @property {string} nonce - random or unique uint64, provides entropy when re-using the same private/public keys.\n    @property {Buffer} message - Plain text message\n    @property {number} checksum - shared secret checksum\n*/\nfunction encrypt(private_key, public_key, message) {\n    var nonce = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : uniqueNonce();\n\n    return crypt(private_key, public_key, nonce, message);\n}\n\n/**\n    Spec: http://localhost:3002/steem/@dantheman/how-to-encrypt-a-memo-when-transferring-steem\n    @arg {PrivateKey} private_key - required and used for decryption\n    @arg {PublicKey} public_key - required and used to calcualte the shared secret\n    @arg {string} nonce - random or unique uint64, provides entropy when re-using the same private/public keys.\n    @arg {Buffer} message - Encrypted or plain text message\n    @arg {number} checksum - shared secret checksum\n    @throws {Error|TypeError} - \"Invalid Key, ...\"\n    @return {Buffer} - message\n*/\nfunction decrypt(private_key, public_key, nonce, message, checksum) {\n    return crypt(private_key, public_key, nonce, message, checksum).message;\n}\n\n/**\n    @arg {Buffer} message - Encrypted or plain text message (see checksum)\n    @arg {number} checksum - shared secret checksum (null to encrypt, non-null to decrypt)\n*/\nfunction crypt(private_key, public_key, nonce, message, checksum) {\n    private_key = toPrivateObj(private_key);\n    if (!private_key) throw new TypeError('private_key is required');\n\n    public_key = toPublicObj(public_key);\n    if (!public_key) throw new TypeError('public_key is required');\n\n    nonce = toLongObj(nonce);\n    if (!nonce) throw new TypeError('nonce is required');\n\n    if (!Buffer.isBuffer(message)) {\n        if (typeof message !== 'string') throw new TypeError('message should be buffer or string');\n        message = new Buffer(message, 'binary');\n    }\n    if (checksum && typeof checksum !== 'number') throw new TypeError('checksum should be a number');\n\n    var S = private_key.get_shared_secret(public_key);\n    var ebuf = new _bytebuffer2.default(_bytebuffer2.default.DEFAULT_CAPACITY, _bytebuffer2.default.LITTLE_ENDIAN);\n    ebuf.writeUint64(nonce);\n    ebuf.append(S.toString('binary'), 'binary');\n    ebuf = new Buffer(ebuf.copy(0, ebuf.offset).toBinary(), 'binary');\n    var encryption_key = _hash2.default.sha512(ebuf);\n\n    // D E B U G\n    // console.log('crypt', {\n    //     priv_to_pub: private_key.toPublicKey().toString(),\n    //     pub: public_key.toString(),\n    //     nonce: nonce.toString(),\n    //     message: message.length,\n    //     checksum,\n    //     S: S.toString('hex'),\n    //     encryption_key: encryption_key.toString('hex'),\n    // })\n\n    var iv = encryption_key.slice(32, 48);\n    var key = encryption_key.slice(0, 32);\n\n    // check is first 64 bit of sha256 hash treated as uint64_t truncated to 32 bits.\n    var check = _hash2.default.sha256(encryption_key);\n    check = check.slice(0, 4);\n    var cbuf = _bytebuffer2.default.fromBinary(check.toString('binary'), _bytebuffer2.default.DEFAULT_CAPACITY, _bytebuffer2.default.LITTLE_ENDIAN);\n    check = cbuf.readUint32();\n\n    if (checksum) {\n        if (check !== checksum) throw new Error('Invalid key');\n        message = cryptoJsDecrypt(message, key, iv);\n    } else {\n        message = cryptoJsEncrypt(message, key, iv);\n    }\n    return { nonce: nonce, message: message, checksum: check };\n}\n\n/** This method does not use a checksum, the returned data must be validated some other way.\n    @arg {string|Buffer} ciphertext - binary format\n    @return {Buffer}\n*/\nfunction cryptoJsDecrypt(message, key, iv) {\n    (0, _assert2.default)(message, \"Missing cipher text\");\n    message = toBinaryBuffer(message);\n    var decipher = _browserifyAes2.default.createDecipheriv('aes-256-cbc', key, iv);\n    // decipher.setAutoPadding(true)\n    message = Buffer.concat([decipher.update(message), decipher.final()]);\n    return message;\n}\n\n/** This method does not use a checksum, the returned data must be validated some other way.\n    @arg {string|Buffer} plaintext - binary format\n    @return {Buffer} binary\n*/\nfunction cryptoJsEncrypt(message, key, iv) {\n    (0, _assert2.default)(message, \"Missing plain text\");\n    message = toBinaryBuffer(message);\n    var cipher = _browserifyAes2.default.createCipheriv('aes-256-cbc', key, iv);\n    // cipher.setAutoPadding(true)\n    message = Buffer.concat([cipher.update(message), cipher.final()]);\n    return message;\n}\n\n/** @return {string} unique 64 bit unsigned number string.  Being time based, this is careful to never choose the same nonce twice.  This value could be recorded in the blockchain for a long time.\n*/\nfunction uniqueNonce() {\n    if (unique_nonce_entropy === null) {\n        var b = _secureRandom2.default.randomUint8Array(2);\n        unique_nonce_entropy = parseInt(b[0] << 8 | b[1], 10);\n    }\n    var long = Long.fromNumber(Date.now());\n    var entropy = ++unique_nonce_entropy % 0xFFFF;\n    // console.log('uniqueNonce date\\t', ByteBuffer.allocate(8).writeUint64(long).toHex(0))\n    // console.log('uniqueNonce entropy\\t', ByteBuffer.allocate(8).writeUint64(Long.fromNumber(entropy)).toHex(0))\n    long = long.shiftLeft(16).or(Long.fromNumber(entropy));\n    // console.log('uniqueNonce final\\t', ByteBuffer.allocate(8).writeUint64(long).toHex(0))\n    return long.toString();\n}\nvar unique_nonce_entropy = null;\n// for(let i=1; i < 10; i++) key.uniqueNonce()\n\nvar toPrivateObj = function toPrivateObj(o) {\n    return o ? o.d ? o : _key_private2.default.fromWif(o) : o /*null or undefined*/;\n};\nvar toPublicObj = function toPublicObj(o) {\n    return o ? o.Q ? o : _key_public2.default.fromString(o) : o /*null or undefined*/;\n};\nvar toLongObj = function toLongObj(o) {\n    return o ? Long.isLong(o) ? o : Long.fromString(o) : o;\n};\nvar toBinaryBuffer = function toBinaryBuffer(o) {\n    return o ? Buffer.isBuffer(o) ? o : new Buffer(o, 'binary') : o;\n};","map":{"mappings":[{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/steem/lib/auth/ecc/src/aes.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}}],"sources":{"../../node_modules/steem/lib/auth/ecc/src/aes.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.encrypt = encrypt;\nexports.decrypt = decrypt;\n\nvar _secureRandom = require('secure-random');\n\nvar _secureRandom2 = _interopRequireDefault(_secureRandom);\n\nvar _bytebuffer = require('bytebuffer');\n\nvar _bytebuffer2 = _interopRequireDefault(_bytebuffer);\n\nvar _browserifyAes = require('browserify-aes');\n\nvar _browserifyAes2 = _interopRequireDefault(_browserifyAes);\n\nvar _assert = require('assert');\n\nvar _assert2 = _interopRequireDefault(_assert);\n\nvar _key_public = require('./key_public');\n\nvar _key_public2 = _interopRequireDefault(_key_public);\n\nvar _key_private = require('./key_private');\n\nvar _key_private2 = _interopRequireDefault(_key_private);\n\nvar _hash = require('./hash');\n\nvar _hash2 = _interopRequireDefault(_hash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Long = _bytebuffer2.default.Long;\n\n/**\n    Spec: http://localhost:3002/steem/@dantheman/how-to-encrypt-a-memo-when-transferring-steem\n    @throws {Error|TypeError} - \"Invalid Key, ...\"\n    @arg {PrivateKey} private_key - required and used for decryption\n    @arg {PublicKey} public_key - required and used to calcualte the shared secret\n    @arg {string} [nonce = uniqueNonce()] - assigned a random unique uint64\n\n    @return {object}\n    @property {string} nonce - random or unique uint64, provides entropy when re-using the same private/public keys.\n    @property {Buffer} message - Plain text message\n    @property {number} checksum - shared secret checksum\n*/\nfunction encrypt(private_key, public_key, message) {\n    var nonce = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : uniqueNonce();\n\n    return crypt(private_key, public_key, nonce, message);\n}\n\n/**\n    Spec: http://localhost:3002/steem/@dantheman/how-to-encrypt-a-memo-when-transferring-steem\n    @arg {PrivateKey} private_key - required and used for decryption\n    @arg {PublicKey} public_key - required and used to calcualte the shared secret\n    @arg {string} nonce - random or unique uint64, provides entropy when re-using the same private/public keys.\n    @arg {Buffer} message - Encrypted or plain text message\n    @arg {number} checksum - shared secret checksum\n    @throws {Error|TypeError} - \"Invalid Key, ...\"\n    @return {Buffer} - message\n*/\nfunction decrypt(private_key, public_key, nonce, message, checksum) {\n    return crypt(private_key, public_key, nonce, message, checksum).message;\n}\n\n/**\n    @arg {Buffer} message - Encrypted or plain text message (see checksum)\n    @arg {number} checksum - shared secret checksum (null to encrypt, non-null to decrypt)\n*/\nfunction crypt(private_key, public_key, nonce, message, checksum) {\n    private_key = toPrivateObj(private_key);\n    if (!private_key) throw new TypeError('private_key is required');\n\n    public_key = toPublicObj(public_key);\n    if (!public_key) throw new TypeError('public_key is required');\n\n    nonce = toLongObj(nonce);\n    if (!nonce) throw new TypeError('nonce is required');\n\n    if (!Buffer.isBuffer(message)) {\n        if (typeof message !== 'string') throw new TypeError('message should be buffer or string');\n        message = new Buffer(message, 'binary');\n    }\n    if (checksum && typeof checksum !== 'number') throw new TypeError('checksum should be a number');\n\n    var S = private_key.get_shared_secret(public_key);\n    var ebuf = new _bytebuffer2.default(_bytebuffer2.default.DEFAULT_CAPACITY, _bytebuffer2.default.LITTLE_ENDIAN);\n    ebuf.writeUint64(nonce);\n    ebuf.append(S.toString('binary'), 'binary');\n    ebuf = new Buffer(ebuf.copy(0, ebuf.offset).toBinary(), 'binary');\n    var encryption_key = _hash2.default.sha512(ebuf);\n\n    // D E B U G\n    // console.log('crypt', {\n    //     priv_to_pub: private_key.toPublicKey().toString(),\n    //     pub: public_key.toString(),\n    //     nonce: nonce.toString(),\n    //     message: message.length,\n    //     checksum,\n    //     S: S.toString('hex'),\n    //     encryption_key: encryption_key.toString('hex'),\n    // })\n\n    var iv = encryption_key.slice(32, 48);\n    var key = encryption_key.slice(0, 32);\n\n    // check is first 64 bit of sha256 hash treated as uint64_t truncated to 32 bits.\n    var check = _hash2.default.sha256(encryption_key);\n    check = check.slice(0, 4);\n    var cbuf = _bytebuffer2.default.fromBinary(check.toString('binary'), _bytebuffer2.default.DEFAULT_CAPACITY, _bytebuffer2.default.LITTLE_ENDIAN);\n    check = cbuf.readUint32();\n\n    if (checksum) {\n        if (check !== checksum) throw new Error('Invalid key');\n        message = cryptoJsDecrypt(message, key, iv);\n    } else {\n        message = cryptoJsEncrypt(message, key, iv);\n    }\n    return { nonce: nonce, message: message, checksum: check };\n}\n\n/** This method does not use a checksum, the returned data must be validated some other way.\n    @arg {string|Buffer} ciphertext - binary format\n    @return {Buffer}\n*/\nfunction cryptoJsDecrypt(message, key, iv) {\n    (0, _assert2.default)(message, \"Missing cipher text\");\n    message = toBinaryBuffer(message);\n    var decipher = _browserifyAes2.default.createDecipheriv('aes-256-cbc', key, iv);\n    // decipher.setAutoPadding(true)\n    message = Buffer.concat([decipher.update(message), decipher.final()]);\n    return message;\n}\n\n/** This method does not use a checksum, the returned data must be validated some other way.\n    @arg {string|Buffer} plaintext - binary format\n    @return {Buffer} binary\n*/\nfunction cryptoJsEncrypt(message, key, iv) {\n    (0, _assert2.default)(message, \"Missing plain text\");\n    message = toBinaryBuffer(message);\n    var cipher = _browserifyAes2.default.createCipheriv('aes-256-cbc', key, iv);\n    // cipher.setAutoPadding(true)\n    message = Buffer.concat([cipher.update(message), cipher.final()]);\n    return message;\n}\n\n/** @return {string} unique 64 bit unsigned number string.  Being time based, this is careful to never choose the same nonce twice.  This value could be recorded in the blockchain for a long time.\n*/\nfunction uniqueNonce() {\n    if (unique_nonce_entropy === null) {\n        var b = _secureRandom2.default.randomUint8Array(2);\n        unique_nonce_entropy = parseInt(b[0] << 8 | b[1], 10);\n    }\n    var long = Long.fromNumber(Date.now());\n    var entropy = ++unique_nonce_entropy % 0xFFFF;\n    // console.log('uniqueNonce date\\t', ByteBuffer.allocate(8).writeUint64(long).toHex(0))\n    // console.log('uniqueNonce entropy\\t', ByteBuffer.allocate(8).writeUint64(Long.fromNumber(entropy)).toHex(0))\n    long = long.shiftLeft(16).or(Long.fromNumber(entropy));\n    // console.log('uniqueNonce final\\t', ByteBuffer.allocate(8).writeUint64(long).toHex(0))\n    return long.toString();\n}\nvar unique_nonce_entropy = null;\n// for(let i=1; i < 10; i++) key.uniqueNonce()\n\nvar toPrivateObj = function toPrivateObj(o) {\n    return o ? o.d ? o : _key_private2.default.fromWif(o) : o /*null or undefined*/;\n};\nvar toPublicObj = function toPublicObj(o) {\n    return o ? o.Q ? o : _key_public2.default.fromString(o) : o /*null or undefined*/;\n};\nvar toLongObj = function toLongObj(o) {\n    return o ? Long.isLong(o) ? o : Long.fromString(o) : o;\n};\nvar toBinaryBuffer = function toBinaryBuffer(o) {\n    return o ? Buffer.isBuffer(o) ? o : new Buffer(o, 'binary') : o;\n};"},"lineCount":185}},"hash":"586715f07f620c4fe9253c3864edb47d","cacheData":{"env":{}}}